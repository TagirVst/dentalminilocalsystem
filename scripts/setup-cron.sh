#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π —á–µ—Ä–µ–∑ cron

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR=$(pwd)
BACKUP_SCRIPT="$PROJECT_DIR/scripts/backup.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞
check_backup_script() {
    if [[ ! -f "$BACKUP_SCRIPT" ]]; then
        error "–°–∫—Ä–∏–ø—Ç backup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $BACKUP_SCRIPT"
    fi
    
    if [[ ! -x "$BACKUP_SCRIPT" ]]; then
        log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞ backup.sh..."
        chmod +x "$BACKUP_SCRIPT"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
setup_daily_backup() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    local cron_line="0 2 * * * cd $PROJECT_DIR && $BACKUP_SCRIPT --quiet >/dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    if crontab -l 2>/dev/null | grep -F "$BACKUP_SCRIPT" > /dev/null; then
        warn "–ó–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ crontab"
        return 0
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ crontab
    (crontab -l 2>/dev/null; echo "$cron_line") | crontab -
    
    log "‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00)"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
setup_weekly_backup() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    local cron_line="0 3 * * 0 cd $PROJECT_DIR && $BACKUP_SCRIPT --quiet >/dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    if crontab -l 2>/dev/null | grep -F "0 3 * * 0.*$BACKUP_SCRIPT" > /dev/null; then
        warn "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ crontab
    (crontab -l 2>/dev/null; echo "$cron_line") | crontab -
    
    log "‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 03:00)"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è cron
setup_cron_logging() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è cron..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    local log_dir="/var/log/dental-backup"
    if [[ ! -d "$log_dir" ]]; then
        sudo mkdir -p "$log_dir"
        sudo chown $USER:$USER "$log_dir"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞-–æ–±—ë—Ä—Ç–∫–∏ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local wrapper_script="$PROJECT_DIR/scripts/backup-wrapper.sh"
    
    cat > "$wrapper_script" << 'EOF'
#!/bin/bash

# –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è backup.sh —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

LOG_DIR="/var/log/dental-backup"
LOG_FILE="$LOG_DIR/backup-$(date +%Y%m).log"
PROJECT_DIR="$(dirname "$(dirname "$(readlink -f "$0")")")"
BACKUP_SCRIPT="$PROJECT_DIR/scripts/backup.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$LOG_DIR"

# –ó–∞–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
echo "$(date '+%Y-%m-%d %H:%M:%S') - –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è" >> "$LOG_FILE"

if cd "$PROJECT_DIR" && "$BACKUP_SCRIPT" --quiet >> "$LOG_FILE" 2>&1; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') - –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ" >> "$LOG_FILE"
    exit 0
else
    echo "$(date '+%Y-%m-%d %H:%M:%S') - –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è" >> "$LOG_FILE"
    exit 1
fi
EOF
    
    chmod +x "$wrapper_script"
    
    log "‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ cron –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: $log_dir"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
setup_log_rotation() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
    
    local logrotate_config="/etc/logrotate.d/dental-backup"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ logrotate
    sudo tee "$logrotate_config" > /dev/null << 'EOF'
/var/log/dental-backup/*.log {
    monthly
    rotate 12
    compress
    delaycompress
    missingok
    notifempty
    create 644 $USER $USER
}
EOF
    
    log "‚úÖ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
test_backup() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    if "$BACKUP_SCRIPT" --db-only --quiet; then
        log "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    fi
}

# –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á cron
show_cron_jobs() {
    echo ""
    echo "üìã –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏ cron –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER:"
    echo "=============================================="
    
    if crontab -l 2>/dev/null | grep -v "^#" | grep -v "^$"; then
        crontab -l 2>/dev/null | grep -v "^#" | grep -v "^$" | while read line; do
            echo "  $line"
        done
    else
        echo "  –ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    echo ""
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á cron
remove_cron_jobs() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ cron..."
    
    local temp_cron=$(mktemp)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ crontab –±–µ–∑ –Ω–∞—à–∏—Ö –∑–∞–¥–∞—á
    crontab -l 2>/dev/null | grep -v "$BACKUP_SCRIPT" > "$temp_cron" || true
    crontab "$temp_cron"
    rm "$temp_cron"
    
    log "‚úÖ –ó–∞–¥–∞—á–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã"
}

# –ü–æ–º–æ—â—å
show_help() {
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 –ö–û–ú–ê–ù–î–ê"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  install                 –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  daily                   –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  weekly                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  test                    –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "  status                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏ cron"
    echo "  remove                  –£–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  logs                    –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 install              –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"
    echo "  $0 daily                –¢–æ–ª—å–∫–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤ 02:00"
    echo "  $0 test                 –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo ""
}

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤
show_logs() {
    local log_dir="/var/log/dental-backup"
    
    if [[ ! -d "$log_dir" ]]; then
        warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $log_dir"
        return 1
    fi
    
    echo "üìã –õ–æ–≥–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "==============================="
    
    # –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤
    local log_files=($(find "$log_dir" -name "backup-*.log" -type f | sort -r))
    
    if [[ ${#log_files[@]} -eq 0 ]]; then
        echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    # –ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ª–æ–≥–∞
    local latest_log="${log_files[0]}"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥: $latest_log"
    echo ""
    
    if [[ -f "$latest_log" ]]; then
        tail -20 "$latest_log"
    fi
    
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏:"
    for log_file in "${log_files[@]}"; do
        local file_size=$(du -h "$log_file" | cut -f1)
        local file_date=$(stat -c %y "$log_file" | cut -d' ' -f1)
        echo "  $log_file ($file_size, $file_date)"
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    if [[ $# -eq 0 ]]; then
        show_help
        exit 1
    fi
    
    local command="$1"
    
    case "$command" in
        install)
            check_backup_script
            setup_daily_backup
            setup_weekly_backup
            setup_cron_logging
            setup_log_rotation
            test_backup
            show_cron_jobs
            echo "üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
            echo ""
            echo "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:"
            echo "   ‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 02:00 - –ø–æ–ª–Ω–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è"
            echo "   ‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ 03:00 (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–ø–∏—è"
            echo ""
            echo "üìÅ –õ–æ–≥–∏: /var/log/dental-backup/"
            echo "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: $0 logs"
            ;;
        daily)
            check_backup_script
            setup_daily_backup
            setup_cron_logging
            test_backup
            show_cron_jobs
            ;;
        weekly)
            check_backup_script
            setup_weekly_backup
            setup_cron_logging
            test_backup
            show_cron_jobs
            ;;
        test)
            check_backup_script
            test_backup
            ;;
        status)
            show_cron_jobs
            ;;
        remove)
            remove_cron_jobs
            show_cron_jobs
            ;;
        logs)
            show_logs
            ;;
        -h|--help|help)
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 --help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç root
if [[ $EUID -eq 0 ]]; then
    error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root!"
fi

# –ó–∞–ø—É—Å–∫
main "$@" 

# –°–∫—Ä–∏–ø—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π —á–µ—Ä–µ–∑ cron

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞
PROJECT_DIR=$(pwd)
BACKUP_SCRIPT="$PROJECT_DIR/scripts/backup.sh"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –±—ç–∫–∞–ø–∞
check_backup_script() {
    if [[ ! -f "$BACKUP_SCRIPT" ]]; then
        error "–°–∫—Ä–∏–ø—Ç backup.sh –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ $BACKUP_SCRIPT"
    fi
    
    if [[ ! -x "$BACKUP_SCRIPT" ]]; then
        log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –¥–ª—è —Å–∫—Ä–∏–ø—Ç–∞ backup.sh..."
        chmod +x "$BACKUP_SCRIPT"
    fi
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
setup_daily_backup() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    local cron_line="0 2 * * * cd $PROJECT_DIR && $BACKUP_SCRIPT --quiet >/dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    if crontab -l 2>/dev/null | grep -F "$BACKUP_SCRIPT" > /dev/null; then
        warn "–ó–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –≤ crontab"
        return 0
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ crontab
    (crontab -l 2>/dev/null; echo "$cron_line") | crontab -
    
    log "‚úÖ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 02:00)"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π
setup_weekly_backup() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π..."
    
    local cron_line="0 3 * * 0 cd $PROJECT_DIR && $BACKUP_SCRIPT --quiet >/dev/null 2>&1"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è –∑–∞–¥–∞—á–∏
    if crontab -l 2>/dev/null | grep -F "0 3 * * 0.*$BACKUP_SCRIPT" > /dev/null; then
        warn "–ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–∞—è –∑–∞–¥–∞—á–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç"
        return 0
    fi
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á–∏ –≤ crontab
    (crontab -l 2>/dev/null; echo "$cron_line") | crontab -
    
    log "‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ –≤ 03:00)"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è cron
setup_cron_logging() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è cron..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
    local log_dir="/var/log/dental-backup"
    if [[ ! -d "$log_dir" ]]; then
        sudo mkdir -p "$log_dir"
        sudo chown $USER:$USER "$log_dir"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–∫—Ä–∏–ø—Ç–∞-–æ–±—ë—Ä—Ç–∫–∏ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    local wrapper_script="$PROJECT_DIR/scripts/backup-wrapper.sh"
    
    cat > "$wrapper_script" << 'EOF'
#!/bin/bash

# –û–±—ë—Ä—Ç–∫–∞ –¥–ª—è backup.sh —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º

LOG_DIR="/var/log/dental-backup"
LOG_FILE="$LOG_DIR/backup-$(date +%Y%m).log"
PROJECT_DIR="$(dirname "$(dirname "$(readlink -f "$0")")")"
BACKUP_SCRIPT="$PROJECT_DIR/scripts/backup.sh"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ª–æ–≥–æ–≤
mkdir -p "$LOG_DIR"

# –ó–∞–ø—É—Å–∫ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º
echo "$(date '+%Y-%m-%d %H:%M:%S') - –ó–∞–ø—É—Å–∫ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è" >> "$LOG_FILE"

if cd "$PROJECT_DIR" && "$BACKUP_SCRIPT" --quiet >> "$LOG_FILE" 2>&1; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') - –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ" >> "$LOG_FILE"
    exit 0
else
    echo "$(date '+%Y-%m-%d %H:%M:%S') - –û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è" >> "$LOG_FILE"
    exit 1
fi
EOF
    
    chmod +x "$wrapper_script"
    
    log "‚úÖ –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ cron –Ω–∞—Å—Ç—Ä–æ–µ–Ω–æ: $log_dir"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤
setup_log_rotation() {
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤..."
    
    local logrotate_config="/etc/logrotate.d/dental-backup"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ logrotate
    sudo tee "$logrotate_config" > /dev/null << 'EOF'
/var/log/dental-backup/*.log {
    monthly
    rotate 12
    compress
    delaycompress
    missingok
    notifempty
    create 644 $USER $USER
}
EOF
    
    log "‚úÖ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞"
}

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è
test_backup() {
    log "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è..."
    
    if "$BACKUP_SCRIPT" --db-only --quiet; then
        log "‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ"
    else
        error "–û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    fi
}

# –ü–æ–∫–∞–∑ —Ç–µ–∫—É—â–∏—Ö –∑–∞–¥–∞—á cron
show_cron_jobs() {
    echo ""
    echo "üìã –¢–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏ cron –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è $USER:"
    echo "=============================================="
    
    if crontab -l 2>/dev/null | grep -v "^#" | grep -v "^$"; then
        crontab -l 2>/dev/null | grep -v "^#" | grep -v "^$" | while read line; do
            echo "  $line"
        done
    else
        echo "  –ó–∞–¥–∞—á–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
    echo ""
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á cron
remove_cron_jobs() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–¥–∞—á —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –∏–∑ cron..."
    
    local temp_cron=$(mktemp)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ crontab –±–µ–∑ –Ω–∞—à–∏—Ö –∑–∞–¥–∞—á
    crontab -l 2>/dev/null | grep -v "$BACKUP_SCRIPT" > "$temp_cron" || true
    crontab "$temp_cron"
    rm "$temp_cron"
    
    log "‚úÖ –ó–∞–¥–∞—á–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã"
}

# –ü–æ–º–æ—â—å
show_help() {
    echo "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"
    echo ""
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 –ö–û–ú–ê–ù–î–ê"
    echo ""
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  install                 –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  daily                   –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  weekly                  –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ç–æ–ª—å–∫–æ –µ–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  test                    –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo "  status                  –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–µ –∑–∞–¥–∞—á–∏ cron"
    echo "  remove                  –£–¥–∞–ª–∏—Ç—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  logs                    –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0 install              –ü–æ–ª–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π"
    echo "  $0 daily                –¢–æ–ª—å–∫–æ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –≤ 02:00"
    echo "  $0 test                 –¢–µ—Å—Ç–æ–≤–æ–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ"
    echo ""
}

# –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤
show_logs() {
    local log_dir="/var/log/dental-backup"
    
    if [[ ! -d "$log_dir" ]]; then
        warn "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞: $log_dir"
        return 1
    fi
    
    echo "üìã –õ–æ–≥–∏ —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è:"
    echo "==============================="
    
    # –ü–æ–∏—Å–∫ —Ñ–∞–π–ª–æ–≤ –ª–æ–≥–æ–≤
    local log_files=($(find "$log_dir" -name "backup-*.log" -type f | sort -r))
    
    if [[ ${#log_files[@]} -eq 0 ]]; then
        echo "–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        return 0
    fi
    
    # –ü–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ª–æ–≥–∞
    local latest_log="${log_files[0]}"
    echo "–ü–æ—Å–ª–µ–¥–Ω–∏–π –ª–æ–≥: $latest_log"
    echo ""
    
    if [[ -f "$latest_log" ]]; then
        tail -20 "$latest_log"
    fi
    
    echo ""
    echo "–î–æ—Å—Ç—É–ø–Ω—ã–µ –ª–æ–≥–∏:"
    for log_file in "${log_files[@]}"; do
        local file_size=$(du -h "$log_file" | cut -f1)
        local file_date=$(stat -c %y "$log_file" | cut -d' ' -f1)
        echo "  $log_file ($file_size, $file_date)"
    done
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    if [[ $# -eq 0 ]]; then
        show_help
        exit 1
    fi
    
    local command="$1"
    
    case "$command" in
        install)
            check_backup_script
            setup_daily_backup
            setup_weekly_backup
            setup_cron_logging
            setup_log_rotation
            test_backup
            show_cron_jobs
            echo "üéâ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã!"
            echo ""
            echo "üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ:"
            echo "   ‚Ä¢ –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –≤ 02:00 - –ø–æ–ª–Ω–∞—è —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è"
            echo "   ‚Ä¢ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω–æ –≤ 03:00 (–≤–æ—Å–∫—Ä–µ—Å–µ–Ω—å–µ) - –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∫–æ–ø–∏—è"
            echo ""
            echo "üìÅ –õ–æ–≥–∏: /var/log/dental-backup/"
            echo "üîç –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤: $0 logs"
            ;;
        daily)
            check_backup_script
            setup_daily_backup
            setup_cron_logging
            test_backup
            show_cron_jobs
            ;;
        weekly)
            check_backup_script
            setup_weekly_backup
            setup_cron_logging
            test_backup
            show_cron_jobs
            ;;
        test)
            check_backup_script
            test_backup
            ;;
        status)
            show_cron_jobs
            ;;
        remove)
            remove_cron_jobs
            show_cron_jobs
            ;;
        logs)
            show_logs
            ;;
        -h|--help|help)
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 --help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏."
            ;;
    esac
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –æ—Ç root
if [[ $EUID -eq 0 ]]; then
    error "–ù–µ –∑–∞–ø—É—Å–∫–∞–π—Ç–µ —ç—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç –æ—Ç –∏–º–µ–Ω–∏ root!"
fi

# –ó–∞–ø—É—Å–∫
main "$@" 