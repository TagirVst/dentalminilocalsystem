#!/bin/bash

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
BACKUP_DIR="/var/backups/dental-system"
DB_NAME="dental_backup"
DB_USER="dental_user"
RETENTION_DAYS=30

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
create_backup_dir() {
    if [[ ! -d "$BACKUP_DIR" ]]; then
        sudo mkdir -p "$BACKUP_DIR"
        sudo chown $USER:$USER "$BACKUP_DIR"
        log "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤: $BACKUP_DIR"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$BACKUP_DIR/dental_db_backup_$timestamp.sql"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏–∑ .env —Ñ–∞–π–ª–∞
    if [[ -f "server/.env" ]]; then
        DB_PASSWORD=$(grep "DB_PASSWORD=" server/.env | cut -d'=' -f2)
        export PGPASSWORD="$DB_PASSWORD"
    else
        error "–§–∞–π–ª server/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    pg_dump -h localhost -U "$DB_USER" "$DB_NAME" > "$backup_file"
    
    if [[ -f "$backup_file" ]]; then
        # –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
        gzip "$backup_file"
        backup_file="${backup_file}.gz"
        
        local file_size=$(du -h "$backup_file" | cut -f1)
        log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $backup_file ($file_size)"
        echo "$backup_file"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    fi
    
    unset PGPASSWORD
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
backup_application() {
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$BACKUP_DIR/dental_app_backup_$timestamp.tar.gz"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º node_modules –∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    tar -czf "$backup_file" \
        --exclude='node_modules' \
        --exclude='client/build' \
        --exclude='sessions' \
        --exclude='.git' \
        --exclude='*.log' \
        -C .. "$(basename "$(pwd)")"
    
    if [[ -f "$backup_file" ]]; then
        local file_size=$(du -h "$backup_file" | cut -f1)
        log "‚úÖ –§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $backup_file ($file_size)"
        echo "$backup_file"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π —Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π..."
    
    local deleted_count=0
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [[ -d "$BACKUP_DIR" ]]; then
        while IFS= read -r -d '' file; do
            rm "$file"
            ((deleted_count++))
        done < <(find "$BACKUP_DIR" -name "dental_*_backup_*.sql.gz" -mtime +$RETENTION_DAYS -print0 2>/dev/null)
        
        while IFS= read -r -d '' file; do
            rm "$file"
            ((deleted_count++))
        done < <(find "$BACKUP_DIR" -name "dental_*_backup_*.tar.gz" -mtime +$RETENTION_DAYS -print0 2>/dev/null)
    fi
    
    if [[ $deleted_count -gt 0 ]]; then
        log "‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: $deleted_count"
    else
        log "‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
check_disk_space() {
    local available_space=$(df "$BACKUP_DIR" | awk 'NR==2 {print $4}')
    local available_gb=$((available_space / 1024 / 1024))
    
    if [[ $available_gb -lt 1 ]]; then
        warn "–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${available_gb}GB"
        warn "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–æ–≤"
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
send_notification() {
    local status=$1
    local message=$2
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ email, Telegram –∏ —Ç.–¥.
    log "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: $status - $message"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local backup_type="full"
    local quiet_mode=false
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            --db-only)
                backup_type="db"
                shift
                ;;
            --app-only)
                backup_type="app"
                shift
                ;;
            --retention)
                RETENTION_DAYS="$2"
                shift 2
                ;;
            --backup-dir)
                BACKUP_DIR="$2"
                shift 2
                ;;
            -q|--quiet)
                quiet_mode=true
                shift
                ;;
            -h|--help)
                echo "–°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"
                echo ""
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
                echo ""
                echo "–û–ø—Ü–∏–∏:"
                echo "  --db-only              –¢–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
                echo "  --app-only             –¢–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
                echo "  --retention DAYS       –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 30)"
                echo "  --backup-dir DIR       –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: /var/backups/dental-system)"
                echo "  -q, --quiet            –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º"
                echo "  -h, --help             –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
                echo ""
                exit 0
                ;;
            *)
                error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
                ;;
        esac
    done
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
    if [[ "$quiet_mode" == true ]]; then
        exec 3>&1 4>&2
        exec 1>/dev/null 2>/dev/null
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if ! command -v pg_dump &> /dev/null; then
        error "pg_dump –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –∫–ª–∏–µ–Ω—Ç."
    fi
    
    if ! command -v tar &> /dev/null; then
        error "tar –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ tar."
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    create_backup_dir
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    check_disk_space
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞
    local db_backup_file=""
    local app_backup_file=""
    local start_time=$(date +%s)
    
    case $backup_type in
        "db")
            db_backup_file=$(backup_database)
            ;;
        "app")
            app_backup_file=$(backup_application)
            ;;
        "full")
            db_backup_file=$(backup_database)
            app_backup_file=$(backup_application)
            ;;
    esac
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
    cleanup_old_backups
    
    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
    if [[ "$quiet_mode" == true ]]; then
        exec 1>&3 2>&4
        exec 3>&- 4>&-
    fi
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    echo ""
    echo "üéâ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo "   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥"
    [[ -n "$db_backup_file" ]] && echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $db_backup_file"
    [[ -n "$app_backup_file" ]] && echo "   –§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $app_backup_file"
    echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤: $BACKUP_DIR"
    echo ""
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    send_notification "SUCCESS" "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${duration}—Å"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'send_notification "ERROR" "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"; error "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@" 

# –°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥–∏–∏

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
GREEN='\033[0;32m'
RED='\033[0;31m'
YELLOW='\033[1;33m'
NC='\033[0m'

# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—ã–≤–æ–¥–∞
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
    exit 1
}

warn() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
BACKUP_DIR="/var/backups/dental-system"
DB_NAME="dental_backup"
DB_USER="dental_user"
RETENTION_DAYS=30

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
create_backup_dir() {
    if [[ ! -d "$BACKUP_DIR" ]]; then
        sudo mkdir -p "$BACKUP_DIR"
        sudo chown $USER:$USER "$BACKUP_DIR"
        log "–°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤: $BACKUP_DIR"
    fi
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
backup_database() {
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$BACKUP_DIR/dental_db_backup_$timestamp.sql"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö..."
    
    # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è –∏–∑ .env —Ñ–∞–π–ª–∞
    if [[ -f "server/.env" ]]; then
        DB_PASSWORD=$(grep "DB_PASSWORD=" server/.env | cut -d'=' -f2)
        export PGPASSWORD="$DB_PASSWORD"
    else
        error "–§–∞–π–ª server/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –±—ç–∫–∞–ø–∞
    pg_dump -h localhost -U "$DB_USER" "$DB_NAME" > "$backup_file"
    
    if [[ -f "$backup_file" ]]; then
        # –°–∂–∞—Ç–∏–µ –±—ç–∫–∞–ø–∞
        gzip "$backup_file"
        backup_file="${backup_file}.gz"
        
        local file_size=$(du -h "$backup_file" | cut -f1)
        log "‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: $backup_file ($file_size)"
        echo "$backup_file"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    fi
    
    unset PGPASSWORD
}

# –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
backup_application() {
    local timestamp=$(date +%Y%m%d_%H%M%S)
    local backup_file="$BACKUP_DIR/dental_app_backup_$timestamp.tar.gz"
    
    log "–°–æ–∑–¥–∞–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –∞—Ä—Ö–∏–≤–∞ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ–º node_modules –∏ –¥—Ä—É–≥–∏—Ö –Ω–µ–Ω—É–∂–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
    tar -czf "$backup_file" \
        --exclude='node_modules' \
        --exclude='client/build' \
        --exclude='sessions' \
        --exclude='.git' \
        --exclude='*.log' \
        -C .. "$(basename "$(pwd)")"
    
    if [[ -f "$backup_file" ]]; then
        local file_size=$(du -h "$backup_file" | cut -f1)
        log "‚úÖ –§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã: $backup_file ($file_size)"
        echo "$backup_file"
    else
        error "–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ —Ñ–∞–π–ª–æ–≤"
    fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
cleanup_old_backups() {
    log "–£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π —Å—Ç–∞—Ä—à–µ $RETENTION_DAYS –¥–Ω–µ–π..."
    
    local deleted_count=0
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤
    if [[ -d "$BACKUP_DIR" ]]; then
        while IFS= read -r -d '' file; do
            rm "$file"
            ((deleted_count++))
        done < <(find "$BACKUP_DIR" -name "dental_*_backup_*.sql.gz" -mtime +$RETENTION_DAYS -print0 2>/dev/null)
        
        while IFS= read -r -d '' file; do
            rm "$file"
            ((deleted_count++))
        done < <(find "$BACKUP_DIR" -name "dental_*_backup_*.tar.gz" -mtime +$RETENTION_DAYS -print0 2>/dev/null)
    fi
    
    if [[ $deleted_count -gt 0 ]]; then
        log "‚úÖ –£–¥–∞–ª–µ–Ω–æ —Å—Ç–∞—Ä—ã—Ö —Ñ–∞–π–ª–æ–≤: $deleted_count"
    else
        log "‚úÖ –°—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
check_disk_space() {
    local available_space=$(df "$BACKUP_DIR" | awk 'NR==2 {print $4}')
    local available_gb=$((available_space / 1024 / 1024))
    
    if [[ $available_gb -lt 1 ]]; then
        warn "–ú–∞–ª–æ —Å–≤–æ–±–æ–¥–Ω–æ–≥–æ –º–µ—Å—Ç–∞: ${available_gb}GB"
        warn "–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Å–≤–æ–±–æ–¥–∏—Ç—å –º–µ—Å—Ç–æ –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –±—ç–∫–∞–ø–æ–≤"
    fi
}

# –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –±—É–¥—É—â–µ–≥–æ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è)
send_notification() {
    local status=$1
    local message=$2
    
    # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ email, Telegram –∏ —Ç.–¥.
    log "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ: $status - $message"
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local backup_type="full"
    local quiet_mode=false
    
    # –ü–∞—Ä—Å–∏–Ω–≥ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
    while [[ $# -gt 0 ]]; do
        case $1 in
            --db-only)
                backup_type="db"
                shift
                ;;
            --app-only)
                backup_type="app"
                shift
                ;;
            --retention)
                RETENTION_DAYS="$2"
                shift 2
                ;;
            --backup-dir)
                BACKUP_DIR="$2"
                shift 2
                ;;
            -q|--quiet)
                quiet_mode=true
                shift
                ;;
            -h|--help)
                echo "–°–∫—Ä–∏–ø—Ç —Ä–µ–∑–µ—Ä–≤–Ω–æ–≥–æ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã —É—á—ë—Ç–∞ –ø–∞—Ü–∏–µ–Ω—Ç–æ–≤"
                echo ""
                echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
                echo ""
                echo "–û–ø—Ü–∏–∏:"
                echo "  --db-only              –¢–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
                echo "  --app-only             –¢–æ–ª—å–∫–æ —Ä–µ–∑–µ—Ä–≤–Ω–∞—è –∫–æ–ø–∏—è —Ñ–∞–π–ª–æ–≤ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
                echo "  --retention DAYS       –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –¥–Ω–µ–π —Ö—Ä–∞–Ω–µ–Ω–∏—è (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: 30)"
                echo "  --backup-dir DIR       –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –¥–ª—è –±—ç–∫–∞–ø–æ–≤ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: /var/backups/dental-system)"
                echo "  -q, --quiet            –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º"
                echo "  -h, --help             –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
                echo ""
                exit 0
                ;;
            *)
                error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
                ;;
        esac
    done
    
    # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
    if [[ "$quiet_mode" == true ]]; then
        exec 3>&1 4>&2
        exec 1>/dev/null 2>/dev/null
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    if ! command -v pg_dump &> /dev/null; then
        error "pg_dump –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ PostgreSQL –∫–ª–∏–µ–Ω—Ç."
    fi
    
    if ! command -v tar &> /dev/null; then
        error "tar –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ tar."
    fi
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –±—ç–∫–∞–ø–æ–≤
    create_backup_dir
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Å–∫–æ–≤–æ–≥–æ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞
    check_disk_space
    
    # –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –±—ç–∫–∞–ø–∞
    local db_backup_file=""
    local app_backup_file=""
    local start_time=$(date +%s)
    
    case $backup_type in
        "db")
            db_backup_file=$(backup_database)
            ;;
        "app")
            app_backup_file=$(backup_application)
            ;;
        "full")
            db_backup_file=$(backup_database)
            app_backup_file=$(backup_application)
            ;;
    esac
    
    # –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞—Ä—ã—Ö –±—ç–∫–∞–ø–æ–≤
    cleanup_old_backups
    
    # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
    local end_time=$(date +%s)
    local duration=$((end_time - start_time))
    
    # –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –≤—ã–≤–æ–¥–∞ –≤ —Ç–∏—Ö–æ–º —Ä–µ–∂–∏–º–µ
    if [[ "$quiet_mode" == true ]]; then
        exec 1>&3 2>&4
        exec 3>&- 4>&-
    fi
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    echo ""
    echo "üéâ –†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!"
    echo "   –í—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: ${duration} —Å–µ–∫—É–Ω–¥"
    [[ -n "$db_backup_file" ]] && echo "   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: $db_backup_file"
    [[ -n "$app_backup_file" ]] && echo "   –§–∞–π–ª—ã –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è: $app_backup_file"
    echo "   –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è –±—ç–∫–∞–ø–æ–≤: $BACKUP_DIR"
    echo ""
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏
    send_notification "SUCCESS" "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ –∑–∞ ${duration}—Å"
}

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
trap 'send_notification "ERROR" "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"; error "–†–µ–∑–µ—Ä–≤–Ω–æ–µ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–µ—Ä–≤–∞–Ω–æ"' INT TERM

# –ó–∞–ø—É—Å–∫
main "$@" 